/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EligibilityCriteria as PrismaEligibilityCriteria,
} from "@prisma/client";

export class EligibilityCriteriaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EligibilityCriteriaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.eligibilityCriteria.count(args);
  }

  async eligibilityCriteriaItems(
    args: Prisma.EligibilityCriteriaFindManyArgs
  ): Promise<PrismaEligibilityCriteria[]> {
    return this.prisma.eligibilityCriteria.findMany(args);
  }
  async eligibilityCriteria(
    args: Prisma.EligibilityCriteriaFindUniqueArgs
  ): Promise<PrismaEligibilityCriteria | null> {
    return this.prisma.eligibilityCriteria.findUnique(args);
  }
  async createEligibilityCriteria(
    args: Prisma.EligibilityCriteriaCreateArgs
  ): Promise<PrismaEligibilityCriteria> {
    return this.prisma.eligibilityCriteria.create(args);
  }
  async updateEligibilityCriteria(
    args: Prisma.EligibilityCriteriaUpdateArgs
  ): Promise<PrismaEligibilityCriteria> {
    return this.prisma.eligibilityCriteria.update(args);
  }
  async deleteEligibilityCriteria(
    args: Prisma.EligibilityCriteriaDeleteArgs
  ): Promise<PrismaEligibilityCriteria> {
    return this.prisma.eligibilityCriteria.delete(args);
  }
}
