/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Scholarship as PrismaScholarship,
  ScholarshipApplication as PrismaScholarshipApplication,
  ScholarshipProvider as PrismaScholarshipProvider,
} from "@prisma/client";

export class ScholarshipServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ScholarshipCountArgs, "select">
  ): Promise<number> {
    return this.prisma.scholarship.count(args);
  }

  async scholarships(
    args: Prisma.ScholarshipFindManyArgs
  ): Promise<PrismaScholarship[]> {
    return this.prisma.scholarship.findMany(args);
  }
  async scholarship(
    args: Prisma.ScholarshipFindUniqueArgs
  ): Promise<PrismaScholarship | null> {
    return this.prisma.scholarship.findUnique(args);
  }
  async createScholarship(
    args: Prisma.ScholarshipCreateArgs
  ): Promise<PrismaScholarship> {
    return this.prisma.scholarship.create(args);
  }
  async updateScholarship(
    args: Prisma.ScholarshipUpdateArgs
  ): Promise<PrismaScholarship> {
    return this.prisma.scholarship.update(args);
  }
  async deleteScholarship(
    args: Prisma.ScholarshipDeleteArgs
  ): Promise<PrismaScholarship> {
    return this.prisma.scholarship.delete(args);
  }

  async findScholarshipApplications(
    parentId: string,
    args: Prisma.ScholarshipApplicationFindManyArgs
  ): Promise<PrismaScholarshipApplication[]> {
    return this.prisma.scholarship
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .scholarshipApplications(args);
  }

  async getScholarshipProvider(
    parentId: string
  ): Promise<PrismaScholarshipProvider | null> {
    return this.prisma.scholarship
      .findUnique({
        where: { id: parentId },
      })
      .scholarshipProvider();
  }
}
