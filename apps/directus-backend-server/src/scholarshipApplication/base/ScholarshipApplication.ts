/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Evaluation } from "../../evaluation/base/Evaluation";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Scholarship } from "../../scholarship/base/Scholarship";
import { EnumScholarshipApplicationStatus } from "./EnumScholarshipApplicationStatus";
import { Student } from "../../student/base/Student";

@ObjectType()
class ScholarshipApplication {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Evaluation],
  })
  @ValidateNested()
  @Type(() => Evaluation)
  @IsOptional()
  evaluations?: Array<Evaluation>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDraft!: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  responses!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => Scholarship,
  })
  @ValidateNested()
  @Type(() => Scholarship)
  @IsOptional()
  scholarship?: Scholarship | null;

  @ApiProperty({
    required: false,
    enum: EnumScholarshipApplicationStatus,
  })
  @IsEnum(EnumScholarshipApplicationStatus)
  @IsOptional()
  @Field(() => EnumScholarshipApplicationStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => Student,
  })
  @ValidateNested()
  @Type(() => Student)
  @IsOptional()
  student?: Student | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { ScholarshipApplication as ScholarshipApplication };
