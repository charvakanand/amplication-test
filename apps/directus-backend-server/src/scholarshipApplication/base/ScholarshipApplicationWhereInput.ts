/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EvaluationListRelationFilter } from "../../evaluation/base/EvaluationListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { ScholarshipWhereUniqueInput } from "../../scholarship/base/ScholarshipWhereUniqueInput";
import { EnumScholarshipApplicationStatus } from "./EnumScholarshipApplicationStatus";
import { StudentWhereUniqueInput } from "../../student/base/StudentWhereUniqueInput";

@InputType()
class ScholarshipApplicationWhereInput {
  @ApiProperty({
    required: false,
    type: () => EvaluationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EvaluationListRelationFilter)
  @IsOptional()
  @Field(() => EvaluationListRelationFilter, {
    nullable: true,
  })
  evaluations?: EvaluationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isDraft?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  responses?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => ScholarshipWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ScholarshipWhereUniqueInput)
  @IsOptional()
  @Field(() => ScholarshipWhereUniqueInput, {
    nullable: true,
  })
  scholarship?: ScholarshipWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumScholarshipApplicationStatus,
  })
  @IsEnum(EnumScholarshipApplicationStatus)
  @IsOptional()
  @Field(() => EnumScholarshipApplicationStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: () => StudentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StudentWhereUniqueInput)
  @IsOptional()
  @Field(() => StudentWhereUniqueInput, {
    nullable: true,
  })
  student?: StudentWhereUniqueInput;
}

export { ScholarshipApplicationWhereInput as ScholarshipApplicationWhereInput };
