/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ShortlistingStage as PrismaShortlistingStage,
} from "@prisma/client";

export class ShortlistingStageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ShortlistingStageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.shortlistingStage.count(args);
  }

  async shortlistingStages(
    args: Prisma.ShortlistingStageFindManyArgs
  ): Promise<PrismaShortlistingStage[]> {
    return this.prisma.shortlistingStage.findMany(args);
  }
  async shortlistingStage(
    args: Prisma.ShortlistingStageFindUniqueArgs
  ): Promise<PrismaShortlistingStage | null> {
    return this.prisma.shortlistingStage.findUnique(args);
  }
  async createShortlistingStage(
    args: Prisma.ShortlistingStageCreateArgs
  ): Promise<PrismaShortlistingStage> {
    return this.prisma.shortlistingStage.create(args);
  }
  async updateShortlistingStage(
    args: Prisma.ShortlistingStageUpdateArgs
  ): Promise<PrismaShortlistingStage> {
    return this.prisma.shortlistingStage.update(args);
  }
  async deleteShortlistingStage(
    args: Prisma.ShortlistingStageDeleteArgs
  ): Promise<PrismaShortlistingStage> {
    return this.prisma.shortlistingStage.delete(args);
  }
}
