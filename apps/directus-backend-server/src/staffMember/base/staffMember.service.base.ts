/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StaffMember as PrismaStaffMember } from "@prisma/client";

export class StaffMemberServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StaffMemberCountArgs, "select">
  ): Promise<number> {
    return this.prisma.staffMember.count(args);
  }

  async staffMembers(
    args: Prisma.StaffMemberFindManyArgs
  ): Promise<PrismaStaffMember[]> {
    return this.prisma.staffMember.findMany(args);
  }
  async staffMember(
    args: Prisma.StaffMemberFindUniqueArgs
  ): Promise<PrismaStaffMember | null> {
    return this.prisma.staffMember.findUnique(args);
  }
  async createStaffMember(
    args: Prisma.StaffMemberCreateArgs
  ): Promise<PrismaStaffMember> {
    return this.prisma.staffMember.create(args);
  }
  async updateStaffMember(
    args: Prisma.StaffMemberUpdateArgs
  ): Promise<PrismaStaffMember> {
    return this.prisma.staffMember.update(args);
  }
  async deleteStaffMember(
    args: Prisma.StaffMemberDeleteArgs
  ): Promise<PrismaStaffMember> {
    return this.prisma.staffMember.delete(args);
  }
}
